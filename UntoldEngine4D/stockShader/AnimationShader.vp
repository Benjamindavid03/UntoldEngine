attribute vec4 Vertex;
attribute vec3 Normal;
attribute vec2 TextureCoord;
attribute vec4 Weights;
attribute vec4 BoneIndices;

uniform mat4 MVPMatrix;
uniform mat3 NormalMatrix;
uniform mat4 MVMatrix;
uniform mat4 BoneMatrix[30];

uniform vec4 PointLight;

varying mediump vec2 vVaryingTexCoords;

varying mediump vec3 outPosition;
varying mediump vec3 outNormal;

//varying mediump vec4 lightPosition;
mediump vec4 newVertex=vec4(0);
mediump vec3 newNormal=vec3(0);

void main(void) 
    {

    vVaryingTexCoords=TextureCoord;
    
    mediump ivec4 iBones=ivec4(BoneIndices);

    mediump int boneIndicesArray[4];
    boneIndicesArray[0]=iBones.x;
    boneIndicesArray[1]=iBones.y;
    boneIndicesArray[2]=iBones.z;
    boneIndicesArray[3]=iBones.w;
    
    mediump float weightArray[4];
    weightArray[0]=Weights.x;
    weightArray[1]=Weights.y;
    weightArray[2]=Weights.z;
    weightArray[3]=Weights.w;

    for(int i=0;i<4;i++){
        
        newVertex+=(BoneMatrix[boneIndicesArray[i]]*Vertex)*weightArray[i];
        newNormal+=vec3((BoneMatrix[boneIndicesArray[i]]*vec4(Normal,0.0))*weightArray[i]);
    }



    outNormal=normalize(NormalMatrix*newNormal);

    outPosition=vec3(MVMatrix*newVertex);

    //lightPosition=vec4(-5.0,10.0,5.0,0.0);

    gl_Position = MVPMatrix*newVertex;
    
    }