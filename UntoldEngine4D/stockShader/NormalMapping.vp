#version 300 es

in vec4 Vertex;
in vec3 Normal;
in vec2 TextureCoord;
in vec4 TangentVector;

uniform mat4 MVPMatrix;
uniform mat3 NormalMatrix;
uniform mat4 MVMatrix;

out mediump vec2 vVaryingTexCoords;
out mediump vec3 LightDir;
out mediump vec3 ViewDir;
out mediump vec4 lightPosition;


void main(void) 
    {

    //transform normal and tangent to eye space

    mediump vec3 norm=normalize(NormalMatrix*Normal);
    mediump vec3 tang=normalize(NormalMatrix*vec3(TangentVector));
    
    //compute the binormal
    mediump vec3 binormal=normalize(cross(norm,tang))*TangentVector.w;

    //Matrix for transformation to tangent space
    mediump mat3 toObjectLocal=mat3(tang.x,binormal.x,norm.x,
                            tang.y,binormal.y,norm.y,
                            tang.z,binormal.z,norm.z);
    
    //Get position in eye coordinate

    mediump vec3 pos=vec3(MVMatrix*Vertex);
    
    //transform light dir, and viewdir to tangent space
    
    lightPosition=vec4(5.0,5.0,-5.0,0.0);

    LightDir=normalize(toObjectLocal*(lightPosition.xyz-pos));
    ViewDir=toObjectLocal*normalize(-pos);
    
    vVaryingTexCoords=TextureCoord;

    gl_Position = MVPMatrix*Vertex;
    
    }